#include <include.h>
#include <random>
#include <curand.h>
#include <cuda_runtime.h>
void init_rabbit_fox(Rabbit** rabbits,int lenghtRabbit, Fox** foxs , int lenghtFox) {

    std::random_device rd;  // Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); // Standard mersenne_twister_engine seeded with rd()
    std::uniform_real_distribution<> dis(0.0, 1.0);
    int count = 0;
    for (int n = 0; n < lenghtRabbit; ++n) {
        // Use dis to transform the random unsigned int generated by gen into a 
        // double in [0, 1). Each call to dis(gen) generates a new random double

        (*rabbits)[n].u = dis(gen);
        (*rabbits)[n].v = dis(gen);

        (*rabbits)[n].direction_u = dis(gen) * 2 - 1;
        (*rabbits)[n].direction_v = dis(gen) * 2 - 1;

        float norme = sqrt(((*rabbits)[n].direction_u)* ((*rabbits)[n].direction_u) + ((*rabbits)[n].direction_v)* ((*rabbits)[n].direction_v));
        (*rabbits)[n].direction_u = (*rabbits)[n].direction_u / norme;
        (*rabbits)[n].direction_v = (*rabbits)[n].direction_v / norme;

        (*rabbits)[n].radius = 0.005;
        if (count++ < 40) {
            (*rabbits)[n].is_alive = 1;
        }
    }
    count = 0;
    for (int n = 0; n < lenghtFox; ++n) {
        // Use dis to transform the random unsigned int generated by gen into a 
        // double in [0, 1). Each call to dis(gen) generates a new random double
        (*foxs)[n].u = dis(gen);
        (*foxs)[n].v = dis(gen);

        (*foxs)[n].direction_u = dis(gen) * 2 - 1;
        (*foxs)[n].direction_v = dis(gen) * 2 - 1;

        float norme = sqrt(((*foxs)[n].direction_u) * ((*foxs)[n].direction_u) + ((*foxs)[n].direction_v) * ((*foxs)[n].direction_v));
        (*foxs)[n].direction_u = (*foxs)[n].direction_u / norme;
        (*foxs)[n].direction_v = (*foxs)[n].direction_v / norme;

        (*foxs)[n].radius = 0.007;
        if (count++ < 6) {
            (*foxs)[n].is_alive = 1;
        }
        
        (*foxs)[n].life_duration = 500;
    }

}
